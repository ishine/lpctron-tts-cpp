cmake_minimum_required(VERSION 3.5.1)

set(SOURCES
    src/test_lpcnet.c
    src/lpcnet.c 
    src/nnet.c 
    src/nnet_data.c 
    src/freq.c
    src/kiss_fft.c 
    src/pitch.c
    src/celt_lpc.c
    include/lpcnet.h 
    )


add_executable(test_lpcnet
		${SOURCES}    
)

include_directories(${ANDROID_SYSROOT}/usr/include/aarch64-linux-android)

MESSAGE ("builing test app")
target_include_directories(test_lpcnet 
PRIVATE include interface
INTERFACE interface)


set (CMAKE_C_FLAGS " ")
set (CMAKE_CXX_FLAGS " ")

#ARM
set (CMAKE_C_FLAGS "-Wall  -Wextra -fvectorize  -fomit-frame-pointer -Wno-unused-function  -march=armv8-a  -DTACOTRON2 -Ofast -ffast-math")
set (CMAKE_CXX_FLAGS "-Wall  -Wextra -fvectorize  -fomit-frame-pointer -Wno-unused-function  -march=armv8-a  -DTACOTRON2 -Ofast -ffast-math")

#set (CMAKE_C_FLAGS "-Wall  -Wextra  -O3 -ffast-math -ftree-vectorize  -fomit-frame-pointer -Wno-unused-function    -DTACOTRON2 -fvectorize")
#set (CMAKE_CXX_FLAGS "-Wall  -Wextra  -O3 -ffast-math -ftree-vectorize -fomit-frame-pointer -Wno-unused-function    -DTACOTRON2 -fvectorize")


add_definitions(-DANDROID)

#add_definitions(-D_GLIBCXX_USE_CXX11_ABI=0)
add_definitions(-D__ARM_NEON__)
add_definitions(-D__ANDROID__)


target_link_libraries(test_lpcnet m)
